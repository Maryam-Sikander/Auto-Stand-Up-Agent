from typing import List, Dict, Optional

def aggregate_activities(
    github_activity: Dict[str, Dict[str, List[dict]]],
    notion_activity: Dict[str, List[dict]],
    all_contributors: List[str],
) -> Dict[str, dict]:
    """
    Merge GitHub and Notion updates per contributor into a structured format.

    Args:
        github_activity: {
            username: {
                "commits": [...],
                "prs": [...],
            }
        }
        notion_activity: {
            username: [...tasks...]
        }
        all_contributors: list of all usernames we expect to track

    Returns:
        {
            username: {
                "done_yesterday": [...],
                "in_progress": [...],
                "blockers": [...],  # empty for now
            }
        }
    """

    final_report = {}

    for user in all_contributors:
        user_commits = github_activity.get(user, {}).get("commits", [])
        user_prs = github_activity.get(user, {}).get("prs", [])
        user_tasks = notion_activity.get(user, [])

        done_yesterday = []
        in_progress = []
        blockers = []  # initially empty

        # Process Commits (assume all commits = done yesterday)
        for commit in user_commits:
            done_yesterday.append(f"Commit: {commit['message']} ({commit['timestamp']})")

        # Process PRs
        for pr in user_prs:
            if pr["state"] == "closed":
                done_yesterday.append(f"PR Merged: {pr['title']} ({pr['timestamp']})")
            else:
                in_progress.append(f"Open PR: {pr['title']} ({pr['timestamp']})")

        # Process Notion Tasks
        for task in user_tasks:
            status = task.get("status", "").lower()

            if status in ["done", "completed"]:
                done_yesterday.append(f"Task Done: {task.get('title', 'Untitled')}")
            elif status in ["in progress", "working"]:
                in_progress.append(f"Task In Progress: {task.get('title', 'Untitled')}")
            else:
                in_progress.append(f"Task (Uncategorized): {task.get('title', 'Untitled')}")

        # If nothing, write "No updates"
        if not done_yesterday and not in_progress:
            done_yesterday.append("No updates.")

        # Assign to final report
        final_report[user] = {
            "done_yesterday": done_yesterday,
            "in_progress": in_progress,
            "blockers": blockers,
        }

    return final_report

# ----------------------
# Example Usage
if __name__ == "__main__":
    # Example GitHub activity
    github_activity = {
        "eman": {
            "commits": [
                {"message": "Fix login bug", "timestamp": "2024-04-25T10:00Z"}
            ],
            "prs": [
                {"title": "Add user auth", "state": "closed", "timestamp": "2024-04-25T12:00Z"},
                {"title": "Update README", "state": "open", "timestamp": "2024-04-25T15:00Z"},
            ],
        },
        "maryam": {
            "commits": [],
            "prs": [],
        }
    }

    # Example Notion tasks
    notion_activity = {
        "eman": [
            {"title": "Finish login API", "status": "Done"},
            {"title": "Review frontend tasks", "status": "In Progress"},
        ],
        "maryam": [
            {"title": "Setup DB schema", "status": "In Progress"},
        ]
    }

    # All contributors
    contributors = ["eman", "maryam", "john"]  # john is inactive

    result = aggregate_activities(github_activity, notion_activity, contributors)

    import pprint
    pprint.pprint(result, width=120)
